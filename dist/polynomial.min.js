/*
Polynomial.js v1.6.0 8/14/2025
https://github.com/rawify/Polynomial.js

Copyright (c) 2025, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(B){function x(a){return function(){const d=this.coeff,b=[];for(var c in d)b.push(+c);if(0===b.length)return"0";b.sort(function(e,g){return e-g});c="";for(let e=b.length;e--;){const g=b[e],f=d[g];let h=f;if(null!==h&&void 0!==h)if(Complex&&h instanceof Complex){if(0!==h.re){""!==c&&0<h.re&&(c+="+");if(-1===h.re&&0!==g)c+="-";else if(1!==h.re||0===g)c+=h.re;1===g?c+="x":0!==g&&(c+="x^"+g)}0!==h.im&&(""!==c&&0<h.im&&(c+="+"),-1===h.im?c+="-":1!==h.im&&(c+=h.im),c+="i",1===g?c+=
"x":0!==g&&(c+="x^"+g))}else if(h=h.valueOf(),0!==h){""!==c&&0<h&&(c+="+");if(-1===h&&0!==g)c+="-";else if(1!==h||0===g)c+=f[a]?f[a]():f.toString();1===g?c+="x":0!==g&&(c+="x^"+g)}}return""===c?"0":c}}function q(a){const d={};if(null===a||void 0===a)a=0;switch(typeof a){case "object":a.coeff&&(a=a.coeff);if(Fraction&&a instanceof Fraction||Complex&&a instanceof Complex||Quaternion&&a instanceof Quaternion)d[0]=a;else for(var b in a)k.empty(a[b])||(d[b]=k.parse(a[b]));return d;case "number":return d[0]=
k.parse(a),d;case "string":a=a.replace(/\s+/g,"");for(y.lastIndex=0;null!==(b=y.exec(a));){var c=1;let g=1;void 0!==b[4]?(c=b[4],g=0):void 0!==b[2]&&(c=b[2]);var e=b[1];c=String(c).match(/[^*/]+|[*/]/g);e=k.parse(e+c[0]);for(let f=1;f<c.length;f+=2)"*"===c[f]?e=k.mul(e,k.parse(c[f+1]||1)):"/"===c[f]&&(e=k.div(e,k.parse(c[f+1]||1)));c=e;void 0!==b[3]&&(g=parseInt(b[3],10));d[g]=void 0===d[g]?c:k.add(d[g],c)}return d}throw Error("Invalid Param");}function w(a,d){const b={};let c=r(a);const e=r(d),g=
[];if(0>e)throw Error("DIV/0");for(;c>=e;){const f=b[c-e]=k.div(a[c]||0,d[e]||0);for(let h in d)a[+h+c-e]=k.sub(a[+h+c-e]||0,k.mul(d[h]||0,f));if(null!==l.trace){const h={};for(let m in d)h[+m+c-e]=k.mul(d[m]||0,f);g.push(new l(h))}c=r(a)}null!==l.trace&&(g.push(new l(a)),l.trace=g);return t(b)}function t(a){for(let d in a)k.empty(a[d])&&delete a[d];return a}function l(a){if(!(this instanceof l))return new l(a);this.coeff=q(a)}function z(a,d){const b={};for(let c in a)b[c]=1;for(let c in d)b[c]=1;
return b}function r(a){let d=-Infinity;for(let b in a)k.empty(a[b])||(d=Math.max(+b,d));return d}function u(a){let d=null;for(let b in a)!k.empty(a[b])&&(null===d||+d<+b)&&(d=b);return+d}function v(a,d){if(null!==d)for(let b in a)a[b]=k.div(a[b],a[d]);return a}const y=/([+-]?)(?:([^+x-]+)?(?:x(?:\^([\d\/]+))?)|([^+x-]+))/g,A={R:{add:function(a,d){return a+d},sub:function(a,d){return a-d},mul:function(a,d){return a*d},div:function(a,d){if(0===d)throw Error("DIV/0");return a/d},parse:function(a){return parseFloat(a)},
empty:function(a){return void 0===a||0===a},pow:function(a,d){return Math.pow(a,d)},equals:function(a,d){return a===d}}};let k=A.R;l.trace=null;l.prototype={coeff:null,gcd:function(a){let d=t(Object.assign({},this.coeff));a=t(q(a));if(0>r(d))return new l(v(a,u(a)));if(0>r(a))return new l(v(d,u(d)));for(;!(0>r(a));){const b=t(Object.assign({},d));w(b,a);d=a;a=b}return new l(v(d,u(d)))},neg:function(){const a={},d=this.coeff;for(const b in d)a[b]=k.mul(d[b],-1);return new l(a)},reciprocal:function(){const a=
{},d=this.coeff,b=r(d);for(const c in d)a[b-c]=d[c];return new l(a)},eval:function(a){const d=this.coeff;var b=r(d);if(0>b)return 0;let c=d[b];for(--b;0<=b;b--)c=k.mul(c,a),k.empty(d[b])||(c=k.add(c,d[b]));return c},lc:function(){const a=u(this.coeff);return null===a?void 0:this.coeff[a]},lm:function(){const a=u(this.coeff),d={};null!==a&&(d[a]=this.coeff[a]);return new l(d)},monic:function(){return new l(v(Object.assign({},this.coeff),u(this.coeff)))},add:function(a){a=q(a);const d={},b=this.coeff,
c=z(a,b);for(const e in c)d[e]=k.add(b[e]||0,a[e]||0);return new l(d)},sub:function(a){a=q(a);const d={},b=this.coeff,c=z(a,b);for(const e in c)d[e]=k.sub(b[e]||0,a[e]||0);return new l(d)},mul:function(a){a=q(a);const d={},b=this.coeff;for(let c in a){c=+c;for(let e in b)e=+e,d[c+e]=k.add(d[c+e]||0,k.mul(a[c]||0,b[e]||0))}return new l(t(d))},addmul:function(a,d){a=q(a);d=q(d);const b={};for(let c in a){c=+c;for(let e in d)e=+e,b[c+e]=k.add(b[c+e]||0,k.mul(a[c]||0,d[e]||0))}return this.add(t(b))},
div:function(a){return new l(w(Object.assign({},this.coeff),q(a)))},pow:function(a){if(isNaN(a)||0>a||a%1)throw Error("Invalid");let d=new l(1),b=this;for(;0<a;)a&1&&(d=d.mul(b)),b=b.mul(b),a>>=1;return d},mod:function(a){const d=Object.assign({},this.coeff);w(d,q(a));return new l(d)},derive:function(a){if(void 0===a)a=1;else if(0>a)return null;const d=this.coeff,b={};for(const n in d)if(+n>=a){var c=n-a,e=k,g=e.mul,f=d[n]||0,h=+n,m=a;let p=1;for(;0<m--;p*=h--);b[c]=g.call(e,f,p)}return new l(b)},
integrate:function(a){if(void 0===a)a=1;else if(0>a)return null;const d=this.coeff,b={};for(const n in d){var c=+n+a,e=k,g=e.div,f=d[n]||0,h=+n,m=a;let p=1;for(;0<m--;p*=++h);b[c]=g.call(e,f,p)}return new l(b)},toString:x("toString"),toLatex:x("toLatex"),toHorner:function(){function a(e,g){let f="";Complex&&e instanceof Complex?0===e.im?(0<e.re&&g&&(f+="+"),f+=e.re):0===e.re?(-1===e.im?f+="-":1!==e.im?(0<e.im&&g&&(f+="+"),f+=e.im):0<e.im&&g&&(f+="+"),f+="i"):(g&&(f+="+"),f=f+"("+e.toString(),f+=")"):
(0<e&&g&&(f+="+"),f+=e.toString());return f}function d(e,g){const f=e.length-g-1,h=e[f]-(e[f-1]||0);let m="",n="";0<h&&(m="x",1<h&&(m+="^"+h));0<f&&(m+=a(b[e[f-1]],!0));if(0===g)return a(b[e[f]],!1)+m;0<=f&&e[f]&&(n+="(");n+=d(e,g-1);0<=f&&e[f]&&(n+=")");return n+m}const b=this.coeff,c=[];for(const e in b)k.empty(b[e])||c.push(+e);if(0===c.length)return"0";c.sort(function(e,g){return e-g});return d(c,c.length-1)},clone:function(){return new l(this)},degree:function(){return r(this.coeff)}};l.fromRoots=
function(a){function d(f){switch(f.length){case 0:return e;case 1:return new l([k.mul(f[0],-1),1]);default:const h=Math.floor(f.length/2),m=f.slice(h,f.length);return d(f.slice(0,h)).mul(d(m))}}var b=a.length;const c=k.parse(0);a=a.filter(f=>!k.equals(f,c));b-=a.length;const e=new l(k.parse(1));a=d(a).coeff;const g={};for(let f in a)g[b+parseInt(f,10)]=a[f];return new l(g)};l.setField=function(a){const d={Q:Fraction,C:Complex,H:Quaternion}[a];if(void 0!==d)k={add:function(b,c){return(new d(b)).add(c)},
sub:function(b,c){return(new d(b)).sub(c)},mul:function(b,c){return(new d(b)).mul(c)},div:function(b,c){return(new d(b)).div(c)},parse:function(b){return new d(b)},empty:function(b){return(new d(b)).equals(0)},pow:function(b,c){return(new d(b)).pow(c)},equals:function(b,c){return(new d(b)).equals(c)}};else if(!a||"R"===a)k=A.R;else if("object"===typeof a)k=a;else if("Z"===a.charAt(0)){const b=+a.slice(1);k={add:function(c,e){return((c+e)%b+b)%b},sub:function(c,e){return((c-e)%b+b)%b},mul:function(c,
e){return(c*e%b+b)%b},div:function(c,e){var g=b;let f=0,h=1,m=1,n=0;for(;0!==e;){var p=g/e|0;const C=g%e,D=f-m*p;p=h-n*p;g=e;e=C;f=m;h=n;m=D;n=p}e=[g,f,h];if(1!==e[0])throw Error("DIV/-");return((e[1]%b+b)%b*c%b+b)%b},parse:function(c){return parseInt(c,10)},empty:function(c){return void 0===c||0===c},pow:function(c,e){let g=1;for(;0<e;)e&1&&(g=(g*c%b+b)%b),c=(c*c%b+b)%b,e>>=1;return g},equals:function(c,e){return c==e}}}};"function"===typeof define&&define.amd?define([],function(){return l}):"object"===
typeof exports?(Object.defineProperty(l,"__esModule",{value:!0}),l["default"]=l,l.Polynomial=l,module.exports=l):B.Polynomial=l})(this);
